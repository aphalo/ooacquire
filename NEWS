OOAcquire 0.1.0
===============

Renamed package, to be rewritten to separate code especific for the especial
calibration protocol. Also separation of code into smaller functions so
that reflectance and transmittance can be also measured with spectrometers
calibrated for wavelength but not for irradiance.

=========================================================

MayaCalc 3.3.0
===============

Updated for photobiology >= 0.8.5
No longer uses package data.table

MayaCalc 3.2.3
===============

Bugs fixed in acq_interactive() and other functions when
using additional protocols: no HDR, HDR with more than
two different integration times. HDR multipliers not
sorted, "m" protocol, method "raw", etc.

Changed defaults in acq_interactive() so that user
errors are less likely, also improved user input
checking. When resetting the integration time, the
previously used value is used as starting point
for the "search".

Added test for clipped spectra, and replaced the clipped
values with NA in the returned spectral objects.

Added safeguard for the case when the instrument does
not "obey" the request to set a given value for the
integration time.

Added function integ_time_range() to find the accepted
range of values for the integration time. This is done
by trial an error and is a slow process.

process_maya_raw_ls() gains a new parameter which_in_HDR
which accepts an integer vector of indexes to the
different integration times. This allows choosing a
subset of the integration times used during measurement
to be processed. The HDR processing uses always two
sets of spectra measured using different integration
times, but more times can be used during acquisition.
Of course, it is also possible to chose a single
integration time, and not use HDR even if the data
are present in the raw spectra list object.

MayaCalc 3.2.2
===============

acq_interactive() has new parameters adding flexibility.
Protocol m now supported, as well as "raw" method,
returning cps_spct objects. Earlier internal functions are
now exported to permit users to write their own high
level functions for data acquisition.

Cleanup of documentation, and User Guide.
Moved raw data to inst/extdata and modified the vignette
to account for this. Added examples of raw spectra acquired
with the package.

MayaCalc 3.2.1
===============

Fixed several bugs. Got dry runs working for all "basic" protocols.
Moved the code from the MayaMeasure script to this package, as
new functions. Now source spectra objects are returned after
applying calibration and corrections. Methods md, mfd, and dmfd
working as expected. Method m works for non-interactive
acquisition, but not for interactive acquisition and the
needed logic to save only raw data is unimplemented.

When using method "raw" when applying a calibration the returned
object is of class cps_spct.

Vignette simplified by using all the new methods and functions
from package photobiology. Added use examples of the new
functions moved from the "acquisition" packages.

MayaCalc 3.1.1
===============

I had different branches and also a commit that was only in the SenPEP
ThinkPad. I pushed this commit, and merged all branches into a development
branch now under GitFlow.

It builds, and passes the check, but is still not tested.

MayaCalc 3.1.0
===============

Merged the latest version of acq.spectra package (which seems to be fully
functional now) into this package as there are many interdependencies, that
need to be kept in sync and tested together.

process_maya_raw_ls() replaces process_maya_spectra() and now supports both
different measurement protocols and use of HDR or not. Tested off-line with
stored data.

The vignette has not been updated yet to decribe the use of the merged in
functions.

MayaCalc 3.0.15
===============

Fixed serious bug in latest calibration data.

MayaCalc 3.0.14
===============

Added function calc_maya_calibration2 with simplified arguments.
Added new calibration data (2014-10-15)
Spectral energy irradiance data is now returned as a source.spct object
instead of a data frame. Internally data.table objects are used troughtout,
and I have attempted to optimize the code for speed, but I have not yet done
any profiling or careful benchmarking.

Now the package depends on R >=3.1.0, data.table >=1.9.4, and photobiology
>=4.0.1

MayaCalc 3.0.13
===============

Added function select_pixs().

MayaCalc 3.0.12
===============

Patching the calibration data was not the best solution, as the pixel at
position 380 (367.77 nm) seems to be intermitently malfunctioning.
Added handling of bad pixels to calc_maya_calibration() and slit_correction().
Data from bad pixels is simply deleted. At the moment used only for the 2014
calibration.

MayaCalc 3.0.11
===============

Added a parameter to process_maya_files() that allows forcing a "measurement
date" different to the one in the raw data .txt files, and in this way force
the use of a different calibration. Use with care.

"Patched" a problem with calibration data for 2014 for one pixel at 367.77 nm.
The pixel may be misbehaving, at least it did during the measurement of the D2
calibration lamp. The bad pixel data in the D2 measurement has been replaced by
a value interpolated from the two nearest pixels. The data for this pixel from
normal measurements is still being used in the calculations.

MayaCalc 3.0.10
===============

Fixed minor bug that was causing a warning from data.table, with only a very
small negative effect on performance.
Improved the information included in the comment_text generated by
process_maya_files().

MayaCalc 3.0.9
==============

Added calibration for 2014.

MayaCalc 3.0.8
==============

Improvements to smoothing. Now smoothing is adjusted based on maximum counts.
Also parameters controlling how much is smoothing and setting very small values
to zero were tweaked. Vignettes were improved, in particular figures in
smoothing.Rnw now show the unsmoothed data in the background, so it is now easy
to see the effect of smoothing. No longer imports the whole of lubridate so as
to avoid name conflicts with data.table.

MayaCalc 3.0.7
==============

Removed one nested ifelse just in case it was causing the apparent slowdown.
Added a "torture test" vignette to try to diagnose the slow down reported by
Matthew. I either fixed the problem or I cannot reproduce it.

MayaCalc 3.0.6
==============

Fixed problem with wavelengths used with method "raw".

MayaCalc 3.0.5
==============

A few small tweaks to improve UVB estimates. Now estimates of unweighted UVB
seem to be just a few percent too high. CIE estimates are very close to the
expected value (0.6% too high) and GEN(G) too high by less than 5%. All this
with careful measurements without bracketing but quite a few scans averaged,
at about 10 am in May, when UVB irradiance was rather low. TUV simulation used
for comparison.

MayaCalc 3.0.4
==============

Added s.e.irrad.qc to the output of process_maya_arrays and process_maya_files
which is a "quality controlled" spectral energy irradiance, with values in
regions with too much variation set to NAs.

Added some warnings messages for too short integration times and the
corresponding information to the comment.

Added some new examples to the vignettes, and changed the scales of some
figures.

Finally seems to be working as it should! It is giving nice and clean
spectral data for LEDs. The problem was in the C++ code for calculating the
slit function "tail" correction.

MayaCalc 3.0.3
==============

Added function to calculate calibration constants, and scripts to build
calibration files and objects.

MayaCalc 3.0.2
==============

Re-designed and re-wrote the code for storing the calibration data. Added
much more precise checking of
calibration dates. Also added information on calibration and number of scans
to the comment attribute. Returned data table contains a comment with metadata
extracted from the meas_short file header.

The values returned are a bit too high in VIS and UVA, and more so in UVB. This
problem was introduced apparently in ver 3.0.0 and needs to be fixed.

Added method "raw" that returns uncalibrated but corrected counts per second,
without smoothing. Should be useful for calibration.

MayaCalc 3.0.1
==============

Further speed optimization by rewriting the tail correction as a separate C++
function, and using a window of 100 values in the inner loop. Need to check if
this window is wide enough. Found and fixed a very serious bug introduced in 3.0.0
(luckily was never released).

MayaCalc 3.0.0
==============

Implemented automatic detection of decimal separator. Decimal now defaults to NULL,
which triggers auto-detection. A character such as "," is still a valid argument,
but the default should always work.

Rewritten to use data.table to speed up code, that is why version was bumped to 3.

MayaCalc 2.5.0
==============

Removed parameter "smoothed_noise" (a bad name) and replaced it with new parameter
"smoothing_hi_lim" which allows the control of upper wavelength limit until which
smoothing is applied. This version uses exactly the same algorithms and defaults
as before. Setting smoothing_hi_lim to zero achieves the same as what achieved earlier
by setting "smoothed_noise" to FALSE.

MayaCalc 2.4.1
==============

New User Guide, cleaned and included new, and more illustrative, examples.
Now all warnings are disabled with default verbose=FALSE, set this parameter
to TRUE if warnings are needed. Now verbose also controls the generation
of additional output.

This should be a fairly stable version, but still needs some testing.

MayaCalc 2.4.0
==============

Removed methods "modified" and "alfa". New methods "full" and "sun", based on
what
was earlier called "alfa". Method "sun" includes suitable trimming of UV tail
for sunlight.

There are two new dependencies: packages "photobiology" and "caTools".

Performance is not yet optimized. While under development, additional output
is provided in the returned
dataframe.

MayaCalc 2.3.1
==============

Tweaked and tested adaptive smoothing algorithm. Tested with different LEDs and
one of Matt's "problematic" scans.

MayaCalc 2.3.0
==============

Many changes to most functions. Rewrote process_maya_arrays to simplify code and
avoid unnecessary calculations and match the latest version of
process_maya_files. Then I rewrote process_maya_files to call process_maya_arrays
so as to avoid code duplication. After this I spent quite a lot of time hunting
bugs. Needs still more testing and some tweaking of the smoothing procedure, and
maybe still some fine tuning of the new method provisionally called "alfa".

MayaCalc 2.2.1
==============

process_maya_files and slit_correction functions have been modified so as not
to read files unnecessarily or do repeated calculations when not using
bracketing, or when not using a filter scan. The results of calculations remain
unchanged.

An undocumented feature of process_maya_files is now documented and tested.
The output dataframe includes additional columns, the most important one being
s.e.irrad.sm, that is s.e.irrad.cal processed for reducing noise in very low
irradiance parts of the spectrum. Still the degree of smoothing needs to be
tweaked by testing on different data sets.

MayaCalc 2.2.0
==============

Documentation now uses roxygen2. Added some comments to the code and check
slit_correction2 very carefully and found only very small differences in the
ranges of wavelengths used for corrections as there were a few very small
differences between the code in the Excel sheet and what was documented in
the same sheet. I cannot see any effect on results. The original method for
the corrections should be preferred and is still the default.

MayaCalc 2.1.1
==============

Now working with the problematic data that Matthew reported as causing whole
spectrum to be returned as NAs. Needs to be checked against Excel workbook.
Documentation needs to be updated. A few NAs, caused by divisions by zero,
were spreading because mean and sd were called with default handling of NAs.
Added 'na.rm=TRUE' to all calls to these functions, and a warning that
reports the number of zeros in 'merged_cs' and the wavelengths at which
they are located.

MayaCalc 2.1.0
==============

Added function to allow use together with MayaControl.

MayaCalc 2.0.0
==============

First stable version. Added support for bracketing, and checks for
consistency among integration times.
